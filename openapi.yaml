openapi: 3.1.0
info:
  version: '1.1'
  title: 'trefu-be'
paths:
  /packets:
    get:
      summary: Returns a list of packets
      tags:
        - Packets
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: The number of items to skip.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
          required: false
          description: The number of items to return.
      responses:
        '200':
          description: A JSON array of packets
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Packet' 
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new packet
      tags:
        - Packets
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Packet' 
      responses:
        '201':
          description: Created packet
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Packet' 
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /packets/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          minimum: 1
    get:
      summary: Get a single packet by ID
      tags:
        - Packets
      responses:
        '200':
          description: A packet object
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Packet' 
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a packet by ID
      tags:
        - Packets
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Packet' 
      responses:
        '200':
          description: An updated packet object
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Packet' 
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Stop:
      type: object
      required:
        - latitude
        - longtitude
        - code
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2
        latitude:
          type: string
          examples:
            - 49.9390617N
        longtitude:
          type: string
          examples:
            - 17.9026936E
        code:
          type: integer
          format: int64
          examples:
            - 12345
    Route:
      type: object
      required: 
        - length
        - direction
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2  
        length:
          type: integer
          format: int64
          examples:
            - 5
            - 6  
        direction:
          type: integer
          format: int64
          enum: [0, 1]
    Line:
      type: object
      required:
        - shortCode
        - fullCode
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2
        shortCode:
          type: integer
          format: int64
          examples:
            - 204
            - 219
        fullCode:
          type: string
          examples:
            - 905201
    Packet:
      type: object
      required:
        - validFrom
        - validTo
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2
        validFrom:
          type: integer
          format: int64
        validTo:
          type: integer
          format: int64
    Connection:
      type: object
      required:
        - number
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2
        number:
          type: integer
          format: int64
          examples:
            - 22
            - 25
    Rule:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2
        description:
          type: string
          examples:
            - Is valid during weekends
            - Is valid during weekdays
    Departure:
      type: object
      required:
        - time
        - departure
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
            - 2
        time:
          type: integer
          format: int64
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          examples:
            - 500
        message:
          type: string
          examples:
            - Something went wrong
